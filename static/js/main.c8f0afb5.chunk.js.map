{"version":3,"sources":["NowPlaying.js","Weather.js","CalendarEmbed.js","App.js","index.js"],"names":["CLIENT_ID","REDIRECT_URI","SCOPES","AUTH_ENDPOINT","TOKEN_ENDPOINT","NowPlaying","token","setToken","useState","refreshToken","setRefreshToken","track","setTrack","loading","setLoading","useEffect","code","URLSearchParams","window","location","search","get","savedAccess","localStorage","getItem","savedRefresh","verifier","fetch","method","headers","Content-Type","body","grant_type","redirect_uri","client_id","code_verifier","then","res","json","data","setItem","access_token","refresh_token","history","replaceState","document","title","pathname","catch","console","error","refreshAccessToken","useCallback","fetchNowPlaying","async","Authorization","status","ok","is_playing","item","name","artists","map","a","join","albumArt","album","images","url","external_urls","spotify","err","interval","setInterval","clearInterval","handleLogin","array","Uint8Array","crypto","getRandomValues","btoa","String","fromCharCode","replace","generateCodeVerifier","challenge","TextEncoder","encode","digest","subtle","generateCodeChallenge","encodeURIComponent","React","createElement","className","Spinner","animation","Card","bg","text","style","maxWidth","margin","Img","variant","src","alt","width","borderRadius","Body","Title","as","fontFamily","Text","Button","href","target","onClick","API_KEY","CITY","Weather","weather","setWeather","temp","main","condition","icon","border","role","size","CalendarEmbed","events","setEvents","Error","now","Date","upcoming","filter","evt","end","sort","b","start","Header","ListGroup","length","Item","action","key","uid","summary","toLocaleString","weekday","day","month","hour","minute","App","Container","Row","Col","md","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"yNAGA,MAAMA,EAAY,mCACZC,EAAe,4BACfC,EAAS,uDACTC,EAAgB,yCAChBC,EAAiB,yCAqBR,SAASC,IACtB,MAAOC,EAAOC,GAAYC,mBAAS,OAC5BC,EAAcC,GAAmBF,mBAAS,OAC1CG,EAAOC,GAAYJ,mBAAS,OAC5BK,EAASC,GAAcN,oBAAS,GAGvCO,oBAAU,KACR,MACMC,EADS,IAAIC,gBAAgBC,OAAOC,SAASC,QAC/BC,IAAI,QAClBC,EAAcC,aAAaC,QAAQ,gBACnCC,EAAeF,aAAaC,QAAQ,iBAE1C,GAAIR,EAAM,CACR,MAAMU,EAAWH,aAAaC,QAAQ,iBACtCG,MAAMvB,EAAgB,CACpBwB,OAAQ,OACRC,QAAS,CAAEC,eAAgB,qCAC3BC,KAAM,IAAId,gBAAgB,CACxBe,WAAY,qBACZhB,OACAiB,aAAchC,EACdiC,UAAWlC,EACXmC,cAAeT,MAGhBU,KAAKC,GAAOA,EAAIC,QAChBF,KAAKG,IACJhB,aAAaiB,QAAQ,eAAgBD,EAAKE,cAC1ClB,aAAaiB,QAAQ,gBAAiBD,EAAKG,eAC3CnC,EAASgC,EAAKE,cACd/B,EAAgB6B,EAAKG,eACrBxB,OAAOyB,QAAQC,aAAa,GAAIC,SAASC,MAAO5B,OAAOC,SAAS4B,YAEjEC,MAAMC,QAAQC,YACR5B,IACTf,EAASe,GACTZ,EAAgBe,KAEjB,IAGH,MAAM0B,EAAqBC,sBAAY,KAChC3C,GACLkB,MAAMvB,EAAgB,CACpBwB,OAAQ,OACRC,QAAS,CAAEC,eAAgB,qCAC3BC,KAAM,IAAId,gBAAgB,CACxBe,WAAY,gBACZU,cAAejC,EACfyB,UAAWlC,MAGZoC,KAAKC,GAAOA,EAAIC,QAChBF,KAAKG,IACJhB,aAAaiB,QAAQ,eAAgBD,EAAKE,cAC1ClC,EAASgC,EAAKE,gBAEfO,MAAMC,QAAQC,QAChB,CAACzC,IAGJM,oBAAU,KACR,IAAKT,EAAO,OAEZ,MAAM+C,EAAkBC,UACtBxC,GAAW,GACX,IACE,MAAMuB,QAAYV,MAAM,yDAA0D,CAChFE,QAAS,CAAE0B,wBAAyBjD,OAEtC,GAAmB,MAAf+B,EAAImB,OAEN,YADAL,IAGF,GAAmB,MAAfd,EAAImB,QAAmBnB,EAAIoB,GAExB,CACL,MAAMlB,QAAaF,EAAIC,OACnBC,EAAKmB,YAAcnB,EAAKoB,KAC1B/C,EAAS,CACPkC,MAAOP,EAAKoB,KAAKC,KACjBC,QAAStB,EAAKoB,KAAKE,QAAQC,IAAIC,GAAKA,EAAEH,MAAMI,KAAK,MACjDC,SAAU1B,EAAKoB,KAAKO,MAAMC,OAAO,GAAGC,IACpCA,IAAK7B,EAAKoB,KAAKU,cAAcC,UAG/B1D,EAAS,WAXXA,EAAS,MAcX,MAAO2D,GACPtB,QAAQC,MAAMqB,GACd3D,EAAS,MACV,QACCE,GAAW,KAIfuC,IACA,MAAMmB,EAAWC,YAAYpB,EAAiB,MAC9C,MAAO,IAAMqB,cAAcF,IAC1B,CAAClE,EAAO6C,IAGX,MAAMwB,EAAcvB,sBAAYE,UAC9B,MAAM5B,EA5HV,WACE,MAAMkD,EAAQ,IAAIC,WAAW,IAE7B,OADA3D,OAAO4D,OAAOC,gBAAgBH,GACvBI,KAAKC,OAAOC,gBAAgBN,IAChCO,QAAQ,MAAO,KACfA,QAAQ,MAAO,KACfA,QAAQ,MAAO,IAsHCC,GACXC,QApHV/B,eAAqC5B,GACnC,MACMa,GADU,IAAI+C,aACCC,OAAO7D,GACtB8D,QAAetE,OAAO4D,OAAOW,OAAOD,OAAO,UAAWjD,GAC5D,OAAOyC,KAAKC,OAAOC,gBAAgB,IAAIL,WAAWW,KAC/CL,QAAQ,MAAO,KACfA,QAAQ,MAAO,KACfA,QAAQ,MAAO,IA6GQO,CAAsBhE,GAC9CH,aAAaiB,QAAQ,gBAAiBd,GACtCR,OAAOC,YACFhB,eAA2BH,wCACb2F,mBAAmB1F,eAC1B0F,mBAAmBzF,mDACiBmF,KAC/C,IAGH,OAAK/E,EAIDO,EAEA+E,IAAAC,cAAA,OAAKC,UAAU,8CACbF,IAAAC,cAACE,IAAO,CAACC,UAAU,WACnBJ,IAAAC,cAAA,aAAO,gCAKRlF,EAKHiF,IAAAC,cAACI,IAAI,CAACC,GAAG,OAAOC,KAAK,QAAQC,MAAO,CAAEC,SAAU,QAASC,OAAQ,WAC/DV,IAAAC,cAACI,IAAKM,IAAG,CACPC,QAAQ,MACRC,IAAK9F,EAAMsD,SACXyC,IAAK/F,EAAMmC,MACXsD,MAAO,CAAEO,MAAO,OAAQC,aAAc,SAExChB,IAAAC,cAACI,IAAKY,KAAI,CAACf,UAAU,eACnBF,IAAAC,cAACI,IAAKa,MAAK,CAACC,GAAG,KAAKjB,UAAU,YAAYM,MAAO,CAAEY,WAAY,4BAC5DrG,EAAMmC,OAET8C,IAAAC,cAACI,IAAKgB,KAAI,CAACnB,UAAU,kBAAkBM,MAAO,CAAEY,WAAY,uBACzDrG,EAAMkD,SAET+B,IAAAC,cAACqB,IAAM,CAACV,QAAQ,UAAUW,KAAMxG,EAAMyD,IAAKgD,OAAO,UAAS,uBAlBxDxB,IAAAC,cAAA,OAAKC,UAAU,cAAa,8BAb5BF,IAAAC,cAACqB,IAAM,CAACV,QAAQ,UAAUa,QAAS1C,GAAa,uBC9I3D,MAAM2C,EAAU,mCACVC,EAAO,YAEE,SAASC,IACtB,MAAOC,EAASC,GAAclH,mBAAS,MAevC,OAbAO,oBAAU,KACRY,2DAA2D4F,wBAA2BD,KACnFlF,KAAKC,GAAOA,EAAIC,QAChBF,KAAKG,IACJmF,EAAW,CACTC,KAAMpF,EAAKqF,KAAKD,KAChBE,UAAWtF,EAAKkF,QAAQ,GAAGG,KAC3BE,KAAMvF,EAAKkF,QAAQ,GAAGK,SAGzB9E,MAAMC,QAAQC,QAChB,IAEEuE,EAOH7B,IAAAC,cAACI,IAAI,CAAC8B,OAAO,OAAO3B,MAAO,CAAEC,SAAU,UACrCT,IAAAC,cAACI,IAAKY,KAAI,CAACf,UAAU,6BACnBF,IAAAC,cAAA,OACEY,yCAA0CgB,EAAQK,cAClDpB,IAAKe,EAAQI,UACb/B,UAAU,SAEZF,IAAAC,cAAA,WACED,IAAAC,cAACI,IAAKa,MAAK,KAAES,GACb3B,IAAAC,cAACI,IAAKgB,KAAI,KACPQ,EAAQE,KAAK,gBAAMF,EAAQI,cAhB7BjC,IAAAC,cAACE,IAAO,CAACC,UAAU,SAASgC,KAAK,SAASC,KAAK,MACpDrC,IAAAC,cAAA,QAAMC,UAAU,mBAAkB,mCCrBzB,SAASoC,IACtB,MAAOC,EAAQC,GAAa5H,mBAAS,MAsBrC,OAnBAO,oBAAU,KACRY,MAHc,kBAIXS,KAAKC,IACJ,IAAKA,EAAIoB,GAAI,MAAM,IAAI4E,MAAM,gCAC7B,OAAOhG,EAAIC,SAEZF,KAAKG,IACJ,MAAM+F,EAAM,IAAIC,KACVC,EAAWjG,EACdkG,OAAOC,GAAO,IAAIH,KAAKG,EAAIC,MAAQL,GACnCM,KAAK,CAAC7E,EAAG8E,IAAM,IAAIN,KAAKxE,EAAE+E,OAAS,IAAIP,KAAKM,EAAEC,QACjDV,EAAUI,KAEXxF,MAAMuB,IACLtB,QAAQC,MAAM,0BAA2BqB,GACzC6D,EAAU,OAEb,IAEY,OAAXD,EACKvC,IAAAC,cAACE,IAAO,CAACC,UAAU,SAASgC,KAAK,SAASC,KAAK,MACpDrC,IAAAC,cAAA,QAAMC,UAAU,mBAAkB,sBAKpCF,IAAAC,cAACI,IAAI,KACHL,IAAAC,cAACI,IAAK8C,OAAM,KAAC,gCACbnD,IAAAC,cAACmD,IAAS,CAACxC,QAAQ,SACE,IAAlB2B,EAAOc,QACNrD,IAAAC,cAACmD,IAAUE,KAAI,CAACpD,UAAU,cAAa,uBAExCqC,EAAOrE,IAAI4E,GACV9C,IAAAC,cAACmD,IAAUE,KAAI,CACbC,QAAM,EACNhC,KAAMuB,EAAItE,IACVgD,OAAO,SACPgC,IAAKV,EAAIW,KAETzD,IAAAC,cAAA,OAAKC,UAAU,yBAAyB4C,EAAIY,SAC5C1D,IAAAC,cAAA,SAAOC,UAAU,cACd,IAAIyC,KAAKG,EAAII,OAAOS,eAAe,QAAS,CAC3CC,QAAS,QACTC,IAAK,UACLC,MAAO,QACPC,KAAM,UACNC,OAAQ,YAETlB,EAAIvH,qBAAkBuH,EAAIvH,gBCtB1B0I,MA3Bf,WACE,OACEjE,IAAAC,cAACiE,IAAS,CAAChE,UAAU,QACnBF,IAAAC,cAAA,UAAQC,UAAU,oBAChBF,IAAAC,cAAA,MAAIC,UAAU,aAAY,kCAG5BF,IAAAC,cAACkE,IAAG,CAACjE,UAAU,QACbF,IAAAC,cAACmE,IAAG,KACFpE,IAAAC,cAAA,MAAIC,UAAU,MAAK,iBACnBF,IAAAC,cAACxF,EAAU,QAIfuF,IAAAC,cAACkE,IAAG,KACFnE,IAAAC,cAACmE,IAAG,CAACC,GAAI,EAAGnE,UAAU,QACpBF,IAAAC,cAAA,MAAIC,UAAU,MAAK,WACnBF,IAAAC,cAAC2B,EAAO,OAEV5B,IAAAC,cAACmE,IAAG,CAACC,GAAI,GACPrE,IAAAC,cAACqC,EAAa,gBCpBXgC,IAASC,WAAWtH,SAASuH,eAAe,SACpDC,OACHzE,IAAAC,cAACD,IAAM0E,WAAU,KACf1E,IAAAC,cAACgE,EAAG","file":"static/js/main.c8f0afb5.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Button, Spinner, Card } from 'react-bootstrap';\r\n\r\nconst CLIENT_ID = 'fa95a427198e4d4790c0be1b9a5d994c';\r\nconst REDIRECT_URI = 'https://j4mest.github.io/';\r\nconst SCOPES = 'user-read-currently-playing user-read-playback-state';\r\nconst AUTH_ENDPOINT = 'https://accounts.spotify.com/authorize';\r\nconst TOKEN_ENDPOINT = 'https://accounts.spotify.com/api/token';\r\n\r\nfunction generateCodeVerifier() {\r\n  const array = new Uint8Array(64);\r\n  window.crypto.getRandomValues(array);\r\n  return btoa(String.fromCharCode(...array))\r\n    .replace(/\\+/g, '-')\r\n    .replace(/\\//g, '_')\r\n    .replace(/=+$/, '');\r\n}\r\n\r\nasync function generateCodeChallenge(verifier) {\r\n  const encoder = new TextEncoder();\r\n  const data = encoder.encode(verifier);\r\n  const digest = await window.crypto.subtle.digest('SHA-256', data);\r\n  return btoa(String.fromCharCode(...new Uint8Array(digest)))\r\n    .replace(/\\+/g, '-')\r\n    .replace(/\\//g, '_')\r\n    .replace(/=+$/, '');\r\n}\r\n\r\nexport default function NowPlaying() {\r\n  const [token, setToken] = useState(null);\r\n  const [refreshToken, setRefreshToken] = useState(null);\r\n  const [track, setTrack] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // OAuth code exchange or load tokens\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const code = params.get('code');\r\n    const savedAccess = localStorage.getItem('access_token');\r\n    const savedRefresh = localStorage.getItem('refresh_token');\r\n\r\n    if (code) {\r\n      const verifier = localStorage.getItem('pkce_verifier');\r\n      fetch(TOKEN_ENDPOINT, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n        body: new URLSearchParams({\r\n          grant_type: 'authorization_code',\r\n          code,\r\n          redirect_uri: REDIRECT_URI,\r\n          client_id: CLIENT_ID,\r\n          code_verifier: verifier,\r\n        }),\r\n      })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          localStorage.setItem('access_token', data.access_token);\r\n          localStorage.setItem('refresh_token', data.refresh_token);\r\n          setToken(data.access_token);\r\n          setRefreshToken(data.refresh_token);\r\n          window.history.replaceState({}, document.title, window.location.pathname);\r\n        })\r\n        .catch(console.error);\r\n    } else if (savedAccess) {\r\n      setToken(savedAccess);\r\n      setRefreshToken(savedRefresh);\r\n    }\r\n  }, []);\r\n\r\n  // Refresh token\r\n  const refreshAccessToken = useCallback(() => {\r\n    if (!refreshToken) return;\r\n    fetch(TOKEN_ENDPOINT, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n      body: new URLSearchParams({\r\n        grant_type: 'refresh_token',\r\n        refresh_token: refreshToken,\r\n        client_id: CLIENT_ID,\r\n      }),\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        localStorage.setItem('access_token', data.access_token);\r\n        setToken(data.access_token);\r\n      })\r\n      .catch(console.error);\r\n  }, [refreshToken]);\r\n\r\n  // Poll Spotify for the current track\r\n  useEffect(() => {\r\n    if (!token) return;\r\n\r\n    const fetchNowPlaying = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const res = await fetch('https://api.spotify.com/v1/me/player/currently-playing', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        if (res.status === 401) {\r\n          refreshAccessToken();\r\n          return;\r\n        }\r\n        if (res.status === 204 || !res.ok) {\r\n          setTrack(null);\r\n        } else {\r\n          const data = await res.json();\r\n          if (data.is_playing && data.item) {\r\n            setTrack({\r\n              title: data.item.name,\r\n              artists: data.item.artists.map(a => a.name).join(', '),\r\n              albumArt: data.item.album.images[0].url,\r\n              url: data.item.external_urls.spotify,\r\n            });\r\n          } else {\r\n            setTrack(null);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.error(err);\r\n        setTrack(null);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchNowPlaying();\r\n    const interval = setInterval(fetchNowPlaying, 15000);\r\n    return () => clearInterval(interval);\r\n  }, [token, refreshAccessToken]);\r\n\r\n  // Initiate login flow\r\n  const handleLogin = useCallback(async () => {\r\n    const verifier = generateCodeVerifier();\r\n    const challenge = await generateCodeChallenge(verifier);\r\n    localStorage.setItem('pkce_verifier', verifier);\r\n    window.location =\r\n      `${AUTH_ENDPOINT}?client_id=${CLIENT_ID}&response_type=code` +\r\n      `&redirect_uri=${encodeURIComponent(REDIRECT_URI)}` +\r\n      `&scope=${encodeURIComponent(SCOPES)}` +\r\n      `&code_challenge_method=S256&code_challenge=${challenge}`;\r\n  }, []);\r\n\r\n  // Render states\r\n  if (!token) {\r\n    return <Button variant=\"success\" onClick={handleLogin}>Log in with Spotify</Button>;\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"d-flex flex-column align-items-center my-4\">\r\n        <Spinner animation=\"border\" />\r\n        <small>Loading current track…</small>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!track) {\r\n    return <div className=\"text-muted\">Nothing playing right now.</div>;\r\n  }\r\n\r\n  return (\r\n    <Card bg=\"dark\" text=\"white\" style={{ maxWidth: '500px', margin: '0 auto' }}>\r\n      <Card.Img\r\n        variant=\"top\"\r\n        src={track.albumArt}\r\n        alt={track.title}\r\n        style={{ width: '100%', borderRadius: '8px' }}\r\n      />\r\n      <Card.Body className=\"text-center\">\r\n        <Card.Title as=\"h2\" className=\"display-6\" style={{ fontFamily: 'Playfair Display, serif' }}>\r\n          {track.title}\r\n        </Card.Title>\r\n        <Card.Text className=\"fs-5 text-muted\" style={{ fontFamily: 'Roboto, sans-serif' }}>\r\n          {track.artists}\r\n        </Card.Text>\r\n        <Button variant=\"success\" href={track.url} target=\"_blank\">\r\n          Listen on Spotify\r\n        </Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Card, Spinner } from 'react-bootstrap';\r\n\r\nconst API_KEY = '74f4c65fa40120881e93ed2e2e832c7d';\r\nconst CITY = 'Leicester';\r\n\r\nexport default function Weather() {\r\n  const [weather, setWeather] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${CITY}&units=metric&appid=${API_KEY}`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setWeather({\r\n          temp: data.main.temp,\r\n          condition: data.weather[0].main,\r\n          icon: data.weather[0].icon\r\n        });\r\n      })\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  if (!weather) {\r\n    return <Spinner animation=\"border\" role=\"status\" size=\"sm\">\r\n      <span className=\"visually-hidden\">Loading weather...</span>\r\n    </Spinner>;\r\n  }\r\n\r\n  return (\r\n    <Card border=\"info\" style={{ maxWidth: '300px' }}>\r\n      <Card.Body className=\"d-flex align-items-center\">\r\n        <img\r\n          src={`https://openweathermap.org/img/wn/${weather.icon}@2x.png`}\r\n          alt={weather.condition}\r\n          className=\"me-3\"\r\n        />\r\n        <div>\r\n          <Card.Title>{CITY}</Card.Title>\r\n          <Card.Text>\r\n            {weather.temp}°C – {weather.condition}\r\n          </Card.Text>\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, ListGroup, Spinner } from 'react-bootstrap';\r\n\r\nexport default function CalendarEmbed() {\r\n  const [events, setEvents] = useState(null);\r\n  const dataUrl = '/calendar.json';\r\n\r\n  useEffect(() => {\r\n    fetch(dataUrl)\r\n      .then(res => {\r\n        if (!res.ok) throw new Error('Failed to load calendar JSON');\r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        const now = new Date();\r\n        const upcoming = data\r\n          .filter(evt => new Date(evt.end) >= now)\r\n          .sort((a, b) => new Date(a.start) - new Date(b.start));\r\n        setEvents(upcoming);\r\n      })\r\n      .catch(err => {\r\n        console.error('Failed to load calendar', err);\r\n        setEvents([]);\r\n      });\r\n  }, []);\r\n\r\n  if (events === null) {\r\n    return <Spinner animation=\"border\" role=\"status\" size=\"sm\">\r\n      <span className=\"visually-hidden\">Loading events...</span>\r\n    </Spinner>;\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>📅 Upcoming Events</Card.Header>\r\n      <ListGroup variant=\"flush\">\r\n        {events.length === 0 && (\r\n          <ListGroup.Item className=\"text-muted\">No upcoming events.</ListGroup.Item>\r\n        )}\r\n        {events.map(evt => (\r\n          <ListGroup.Item\r\n            action\r\n            href={evt.url}\r\n            target=\"_blank\"\r\n            key={evt.uid}\r\n          >\r\n            <div className=\"fw-bold text-truncate\">{evt.summary}</div>\r\n            <small className=\"text-muted\">\r\n              {new Date(evt.start).toLocaleString('en-GB', {\r\n                weekday: 'short',\r\n                day: 'numeric',\r\n                month: 'short',\r\n                hour: '2-digit',\r\n                minute: '2-digit',\r\n              })}\r\n              {evt.location && ` • ${evt.location}`}\r\n            </small>\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport NowPlaying from './NowPlaying';\nimport Weather from './Weather';\nimport CalendarEmbed from './CalendarEmbed';\n\nfunction App() {\n  return (\n    <Container className=\"py-5\">\n      <header className=\"mb-5 text-center\">\n        <h1 className=\"display-4\">Welcome to J4mesT’s Site</h1>\n      </header>\n\n      <Row className=\"mb-4\">\n        <Col>\n          <h2 className=\"h4\">Now Listening</h2>\n          <NowPlaying />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col md={6} className=\"mb-4\">\n          <h2 className=\"h4\">Weather</h2>\n          <Weather />\n        </Col>\n        <Col md={6}>\n          <CalendarEmbed />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","// src/index.js\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';      // ← note the '/client'\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}