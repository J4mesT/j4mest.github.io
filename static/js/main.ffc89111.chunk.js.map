{"version":3,"sources":["NowPlaying.js","Weather.js","CalendarEmbed.js","App.js","index.js"],"names":["CLIENT_ID","REDIRECT_URI","SCOPES","AUTH_ENDPOINT","TOKEN_ENDPOINT","NowPlaying","token","setToken","useState","refreshToken","setRefreshToken","track","setTrack","useEffect","code","URLSearchParams","window","location","search","get","savedAccess","localStorage","getItem","savedRefresh","verifier","fetch","method","headers","Content-Type","body","grant_type","redirect_uri","client_id","code_verifier","then","res","json","data","setItem","access_token","refresh_token","history","replaceState","document","title","pathname","catch","console","error","handleLogin","useCallback","async","array","Uint8Array","crypto","getRandomValues","btoa","String","fromCharCode","replace","generateCodeVerifier","challenge","TextEncoder","encode","digest","subtle","generateCodeChallenge","encodeURIComponent","refreshAccessToken","fetchNow","Authorization","status","ok","is_playing","item","name","artists","map","a","join","albumArt","album","images","url","external_urls","spotify","interval","setInterval","clearInterval","React","createElement","Card","bg","text","style","maxWidth","Body","className","src","alt","width","height","Title","href","target","rel","Text","Spinner","animation","role","size","Button","variant","onClick","API_KEY","CITY","Weather","weather","setWeather","temp","main","condition","icon","border","CalendarEmbed","events","setEvents","Error","now","Date","upcoming","filter","evt","end","sort","b","start","err","Header","ListGroup","length","Item","action","key","uid","summary","toLocaleString","weekday","day","month","hour","minute","App","Container","Row","Col","md","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.ffc89111.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Card, Button, Spinner } from 'react-bootstrap';\r\n\r\nconst CLIENT_ID = 'fa95a427198e4d4790c0be1b9a5d994c';\r\nconst REDIRECT_URI = 'https://j4mest.github.io/';\r\nconst SCOPES = 'user-read-currently-playing user-read-playback-state';\r\nconst AUTH_ENDPOINT = 'https://accounts.spotify.com/authorize';\r\nconst TOKEN_ENDPOINT = 'https://accounts.spotify.com/api/token';\r\n\r\nfunction generateCodeVerifier() {\r\n  const array = new Uint8Array(64);\r\n  window.crypto.getRandomValues(array);\r\n  return btoa(String.fromCharCode(...array))\r\n    .replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\r\n}\r\n\r\nasync function generateCodeChallenge(verifier) {\r\n  const encoder = new TextEncoder();\r\n  const data = encoder.encode(verifier);\r\n  const digest = await window.crypto.subtle.digest('SHA-256', data);\r\n  return btoa(String.fromCharCode(...new Uint8Array(digest)))\r\n    .replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\r\n}\r\n\r\nexport default function NowPlaying() {\r\n  const [token, setToken] = useState(null);\r\n  const [refreshToken, setRefreshToken] = useState(null);\r\n  const [track, setTrack] = useState(null);\r\n\r\n  // On mount: exchange code or load saved tokens\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const code = params.get('code');\r\n    const savedAccess = localStorage.getItem('access_token');\r\n    const savedRefresh = localStorage.getItem('refresh_token');\r\n\r\n    if (code) {\r\n      const verifier = localStorage.getItem('pkce_verifier');\r\n      fetch(TOKEN_ENDPOINT, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n        body: new URLSearchParams({\r\n          grant_type: 'authorization_code',\r\n          code,\r\n          redirect_uri: REDIRECT_URI,\r\n          client_id: CLIENT_ID,\r\n          code_verifier: verifier\r\n        })\r\n      })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          localStorage.setItem('access_token', data.access_token);\r\n          localStorage.setItem('refresh_token', data.refresh_token);\r\n          setToken(data.access_token);\r\n          setRefreshToken(data.refresh_token);\r\n          // clear code from URL\r\n          window.history.replaceState({}, document.title, window.location.pathname);\r\n        })\r\n        .catch(console.error);\r\n    } else if (savedAccess) {\r\n      setToken(savedAccess);\r\n      setRefreshToken(savedRefresh);\r\n    }\r\n  }, []);\r\n\r\n  const handleLogin = useCallback(async () => {\r\n    const verifier = generateCodeVerifier();\r\n    const challenge = await generateCodeChallenge(verifier);\r\n    localStorage.setItem('pkce_verifier', verifier);\r\n\r\n    window.location = `${AUTH_ENDPOINT}?client_id=${CLIENT_ID}` +\r\n      `&response_type=code` +\r\n      `&redirect_uri=${encodeURIComponent(REDIRECT_URI)}` +\r\n      `&scope=${encodeURIComponent(SCOPES)}` +\r\n      `&code_challenge_method=S256` +\r\n      `&code_challenge=${challenge}`;\r\n  }, []);\r\n\r\n  // Refresh token helper\r\n  const refreshAccessToken = useCallback(() => {\r\n    if (!refreshToken) return;\r\n    fetch(TOKEN_ENDPOINT, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n      body: new URLSearchParams({\r\n        grant_type: 'refresh_token',\r\n        refresh_token: refreshToken,\r\n        client_id: CLIENT_ID\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        localStorage.setItem('access_token', data.access_token);\r\n        setToken(data.access_token);\r\n      })\r\n      .catch(console.error);\r\n  }, [refreshToken]);\r\n\r\n  // Poll current track\r\n  useEffect(() => {\r\n    if (!token) return;\r\n    const fetchNow = async () => {\r\n      const res = await fetch('https://api.spotify.com/v1/me/player/currently-playing', {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      if (res.status === 401) return refreshAccessToken();\r\n      if (res.status === 204 || !res.ok) return setTrack(null);\r\n      const data = await res.json();\r\n      if (data.is_playing && data.item) {\r\n        setTrack({\r\n          title: data.item.name,\r\n          artists: data.item.artists.map(a => a.name).join(', '),\r\n          albumArt: data.item.album.images[0].url,\r\n          url: data.item.external_urls.spotify\r\n        });\r\n      } else {\r\n        setTrack(null);\r\n      }\r\n    };\r\n\r\n    fetchNow();\r\n    const interval = setInterval(fetchNow, 15000);\r\n    return () => clearInterval(interval);\r\n  }, [token, refreshAccessToken]);\r\n\r\n  if (!token) {\r\n    return <Button variant=\"success\" onClick={handleLogin}>Log in with Spotify</Button>;\r\n  }\r\n\r\n  if (!track) {\r\n    return <Spinner animation=\"border\" role=\"status\" size=\"sm\">\r\n      <span className=\"visually-hidden\">Nothing playing right now.</span>\r\n    </Spinner>;\r\n  }\r\n\r\n  return (\r\n    <Card bg=\"dark\" text=\"white\" style={{ maxWidth: '400px' }}>\r\n      <Card.Body className=\"d-flex\">\r\n        <img\r\n          src={track.albumArt}\r\n          alt={track.title}\r\n          className=\"rounded me-3\"\r\n          style={{ width: '64px', height: '64px' }}\r\n        />\r\n        <div>\r\n          <Card.Title>\r\n            <a\r\n              href={track.url}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              className=\"link-success\"\r\n            >\r\n              🎧 {track.title}\r\n            </a>\r\n          </Card.Title>\r\n          <Card.Text>{track.artists}</Card.Text>\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Card, Spinner } from 'react-bootstrap';\r\n\r\nconst API_KEY = '74f4c65fa40120881e93ed2e2e832c7d';\r\nconst CITY = 'Leicester';\r\n\r\nexport default function Weather() {\r\n  const [weather, setWeather] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${CITY}&units=metric&appid=${API_KEY}`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setWeather({\r\n          temp: data.main.temp,\r\n          condition: data.weather[0].main,\r\n          icon: data.weather[0].icon\r\n        });\r\n      })\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  if (!weather) {\r\n    return <Spinner animation=\"border\" role=\"status\" size=\"sm\">\r\n      <span className=\"visually-hidden\">Loading weather...</span>\r\n    </Spinner>;\r\n  }\r\n\r\n  return (\r\n    <Card border=\"info\" style={{ maxWidth: '300px' }}>\r\n      <Card.Body className=\"d-flex align-items-center\">\r\n        <img\r\n          src={`https://openweathermap.org/img/wn/${weather.icon}@2x.png`}\r\n          alt={weather.condition}\r\n          className=\"me-3\"\r\n        />\r\n        <div>\r\n          <Card.Title>{CITY}</Card.Title>\r\n          <Card.Text>\r\n            {weather.temp}°C – {weather.condition}\r\n          </Card.Text>\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, ListGroup, Spinner } from 'react-bootstrap';\r\n\r\nexport default function CalendarEmbed() {\r\n  const [events, setEvents] = useState(null);\r\n  const dataUrl = '/calendar.json';\r\n\r\n  useEffect(() => {\r\n    fetch(dataUrl)\r\n      .then(res => {\r\n        if (!res.ok) throw new Error('Failed to load calendar JSON');\r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        const now = new Date();\r\n        const upcoming = data\r\n          .filter(evt => new Date(evt.end) >= now)\r\n          .sort((a, b) => new Date(a.start) - new Date(b.start));\r\n        setEvents(upcoming);\r\n      })\r\n      .catch(err => {\r\n        console.error('Failed to load calendar', err);\r\n        setEvents([]);\r\n      });\r\n  }, []);\r\n\r\n  if (events === null) {\r\n    return <Spinner animation=\"border\" role=\"status\" size=\"sm\">\r\n      <span className=\"visually-hidden\">Loading events...</span>\r\n    </Spinner>;\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>📅 Upcoming Events</Card.Header>\r\n      <ListGroup variant=\"flush\">\r\n        {events.length === 0 && (\r\n          <ListGroup.Item className=\"text-muted\">No upcoming events.</ListGroup.Item>\r\n        )}\r\n        {events.map(evt => (\r\n          <ListGroup.Item\r\n            action\r\n            href={evt.url}\r\n            target=\"_blank\"\r\n            key={evt.uid}\r\n          >\r\n            <div className=\"fw-bold text-truncate\">{evt.summary}</div>\r\n            <small className=\"text-muted\">\r\n              {new Date(evt.start).toLocaleString('en-GB', {\r\n                weekday: 'short',\r\n                day: 'numeric',\r\n                month: 'short',\r\n                hour: '2-digit',\r\n                minute: '2-digit',\r\n              })}\r\n              {evt.location && ` • ${evt.location}`}\r\n            </small>\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport NowPlaying from './NowPlaying';\nimport Weather from './Weather';\nimport CalendarEmbed from './CalendarEmbed';\n\nfunction App() {\n  return (\n    <Container className=\"py-5\">\n      <header className=\"mb-5 text-center\">\n        <h1 className=\"display-4\">Welcome to J4mesT’s Site</h1>\n      </header>\n\n      <Row className=\"mb-4\">\n        <Col>\n          <h2 className=\"h4\">Now Listening</h2>\n          <NowPlaying />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col md={6} className=\"mb-4\">\n          <h2 className=\"h4\">Weather</h2>\n          <Weather />\n        </Col>\n        <Col md={6}>\n          <CalendarEmbed />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","// src/index.js\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';      // ← note the '/client'\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}